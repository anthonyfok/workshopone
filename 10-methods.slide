Methods
22 Feb 2017
Tags: edmonton-go, golang, workshop, workshop-one, functions, methods

James Bell
CEO, Bellstone Engineering
james@bellstone.ca

* Review: Functions

.play -edit 10-methods/printPerson.go /BEGIN OMIT/,/END OMIT/

* Review: Defined types

.play -edit 10-methods/userType.go /BEGIN OMIT/,/END OMIT/

* Method on a type

.play -edit 10-methods/methodPrintPerson.go /BEGIN OMIT/,/END OMIT/

* Methods can change data

# This code won't run because it doesn't have a pointer receiver.
# The point of this slide is to show a common error when forgetting to use a pointer receiver, which will be explained in the next slide.

.play -edit 10-methods/incrementor.go /BEGIN OMIT/,/END OMIT/

* Methods can change data by using pointer receivers

- In order to change data, the method must act on a pointer.
- The only necessary change to the `Incrementor` is to make the `Increment` function take a pointer.

.play -edit 10-methods/incrementorFixed.go /BEGIN OMIT/,/END OMIT/

* Go converts between pointer recievers and values automatically

- On the last slide, an `Incrementor` value was used to call a pointer method.
- Here, the variable `inc` is created as a pointer instead of as a value, but there's no need to change the rest of the code.

.play -edit 10-methods/incrementorPointer.go /BEGIN OMIT/,/END OMIT/

* Method Composition

* Person with Incrementor

.play -edit 10-methods/incrementPerson.go /BEGIN OMIT/,/END OMIT/

* Person with Embedded Incrementor

.play -edit 10-methods/embeddedPerson.go /BEGIN OMIT/,/END OMIT/

* Scope

- As with functions and variables, capitalized methods can be accessed from other packages.
- The incrementor's `int` is private, but all of the methods and the type are public.

.play -edit 10-methods/incrementorFixed.go /type/,/}/

.play -edit 10-methods/incrementorFixed.go /func main/,/END OMIT/

* Exercises

- Change all of the functions you created in the last talk's exercises to be methods.

* Solution

- Write a function which takes the struct as an argument and prints information about the account.

.play -edit 10-methods/solution.go /START PRINT/,/END PRINT/
.play -edit 10-methods/solution.go /START PRINT MAIN/,/END PRINT MAIN/

* Solution

- Write the functions Withdraw and Deposit which take the struct and a positive amount and update the account balance.

.play -edit 10-methods/solution.go /START WITHDRAW/,/END WITHDRAW/
.play -edit 10-methods/solution.go /START WITHDRAW MAIN/,/END WITHDRAW MAIN/
